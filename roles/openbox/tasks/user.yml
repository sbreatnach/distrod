---
- name: user-specific facts
  set_fact:
    home_dir: "{{ openbox[os_target].directories.home }}/{{ cur_username }}"

- name: create config dirs
  become_user: "{{ cur_username }}"
  file: state=directory path={{ item }}
  with_items:
    - "{{ home_dir }}/.config/openbox"
    - "{{ home_dir }}/.config/conky"
    - "{{ home_dir }}/.config/lxpanel/default/panels"
    - "{{ home_dir }}/.config/ulauncher"
    - "{{ home_dir }}/.config/carillon"

- name: create static user files
  become_user: "{{ cur_username }}"
  copy: src={{ item.src }} dest={{ home_dir }}/{{ item.dest }}
  with_items: "{{ openbox.user_static_files }}"

- name: create X init script
  become_user: "{{ cur_username }}"
  template: src=xinitrc.j2 dest={{ home_dir }}/.xinitrc mode=0744

- name: create X mod map
  become_user: "{{ cur_username }}"
  template: src=xmodmaprc.j2 dest={{ home_dir }}/.xmodmaprc mode=0744

- name: create config files
  become_user: "{{ cur_username }}"
  template: src={{ item.file }}.j2 dest={{ home_dir }}/{{ item.dir }}/{{ item.output_file|default(item.file) }}
  with_items:
    - { file: xresources, dir: ".", output_file: .Xresources }
    - { file: xscreensaver, dir: ".", output_file: .xscreensaver }
    - { file: rc.xml, dir: .config/openbox }
    - { file: environment, dir: .config/openbox }
    - { file: menu.xml, dir: .config/openbox }
    - { file: autostart, dir: .config/openbox }
    - { file: conky.conf, dir: .config/conky }
    - { file: lxpanel_panel, dir: .config/lxpanel/default/panels, output_file: panel }
    - { file: ulauncher_settings.json, dir: .config/ulauncher, output_file: settings.json }
    - { file: carillon.yml, dir: .config/carillon, output_file: default.yml }

- name: copy resources
  become_user: "{{ cur_username }}"
  copy: src={{ defaults.dirs.resources }} dest={{ home_dir }}/resources

- block:
    - name: setting locale for {{ cur_username }}
      become_user: "{{ cur_username }}"
      template: src=login.conf.j2 dest={{ home_dir }}/.login_conf

    - name: add {{ cur_username }} to important groups
      shell: pw groupmod {{ item }} -m {{ cur_username }}
      with_items:
        - webcamd
        - wheel
        - operator
        - video

    - name: create missing xsession
      become_user: "{{ cur_username }}"
      copy:
        src: xsession
        dest: "{{ home_dir }}/.xsession"
  when: os_target == 'freebsd'

- name: enable sudo access for {{ cur_username }}
  template: src=sudoers.j2 dest={{ openbox[os_target].directories.sudo_config }}/sudoers.d/{{ cur_username }}
